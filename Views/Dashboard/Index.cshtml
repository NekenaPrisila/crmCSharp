@using CRMSharp.ViewModels
@model DashboardViewModel
@{
    ViewData["Title"] = "Dashboard";
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">

<div class="text-center">
    <h1 class="display-4">Bienvenue sur le Dashboard</h1>
    <p>Gérez vos tickets, leads et clients efficacement.</p>
</div>

<div class="mt-5">
    <h3>Totaux</h3>
    <div class="row">
        <!-- Tickets -->
        <div class="col-md-4">
            <a href="@Url.Action("Tickets", "Dashboard")" class="text-decoration-none text-body">
                <div class="card clickable-card">
                    <div class="card-body d-flex justify-content-between align-items-center">
                        <div>
                            <h5 class="card-title text-primary">Tickets</h5> <!-- Bleu comme l'icône -->
                            <p class="card-text display-4">@Model.TotalTickets</p>
                            <p class="card-text fw-bold fs-6">Expense Ticket Total : @Model.TotalExpenseTickets</p>
                        </div>
                        <i class="fas fa-ticket-alt fa-3x text-primary"></i>
                    </div>
                </div>
            </a>
        </div>

        <!-- Leads -->
        <div class="col-md-4">
            <a href="@Url.Action("Leads", "Dashboard")" class="text-decoration-none text-body">
                <div class="card clickable-card">
                    <div class="card-body d-flex justify-content-between align-items-center">
                        <div>
                            <h5 class="card-title text-success">Leads</h5> <!-- Vert comme l'icône -->
                            <p class="card-text display-4">@Model.TotalLeads</p>
                            <p class="card-text fw-bold fs-6">Expense Lead Total : @Model.TotalExpenseLeads</p>
                        </div>
                        <i class="fas fa-user-plus fa-3x text-success"></i>
                    </div>
                </div>
            </a>
        </div>

        <!-- Clients -->
        <div class="col-md-4">
            <a href="@Url.Action("Customers", "Dashboard")" class="text-decoration-none text-body">
                <div class="card clickable-card">
                    <div class="card-body d-flex justify-content-between align-items-center">
                        <div>
                            <h5 class="card-title text-warning">Clients</h5> <!-- Jaune comme l'icône -->
                            <p class="card-text display-4">@Model.TotalCustomers</p>
                            <p class="card-text fw-bold fs-6">Total Budget Customers: @Model.TotalBudgetCustomers</p>
                        </div>
                        <i class="fas fa-users fa-3x text-warning"></i>
                    </div>
                </div>
            </a>
        </div>
    </div>
</div>

<!-- Section Graphiques -->
<div class="mt-5">
    <h3>Graphiques</h3>
    <div class="row">
        <!-- Graphique des Tickets -->
        <div class="col-md-4">
            <canvas id="ticketChart" width="600" height="600"></canvas>
        </div>
        <!-- Graphique des Leads -->
        <div class="col-md-4">
            <canvas id="leadChart" width="600" height="300"></canvas>
        </div>
        <!-- Graphique des Clients -->
        <div class="col-md-4">
            <canvas id="customerChart" width="600" height="600"></canvas>
        </div>
    </div>
</div>

<!-- Script pour les graphiques -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    // Graphique des Tickets
    var ticketCtx = document.getElementById('ticketChart').getContext('2d');
    var ticketChart = new Chart(ticketCtx, {
        type: 'bar',
        data: {
            labels: @Html.Raw(Json.Serialize(Model.Tickets.Select(t => t.Subject))),
            datasets: [{
                label: 'Dépenses par Ticket',
                data: @Html.Raw(Json.Serialize(Model.Tickets.Select(t => t.Expense))),
                backgroundColor: 'rgba(75, 192, 192, 0.2)',
                borderColor: 'rgba(75, 192, 192, 1)',
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true,
                    title: {
                        display: true,
                        text: 'Dépenses (€)'
                    }
                },
                x: {
                    title: {
                        display: true,
                        text: 'Tickets'
                    }
                }
            }
        }
    });

    // Graphique des Leads en Pie Chart
    var leadCtx = document.getElementById('leadChart').getContext('2d');
    var leadChart = new Chart(leadCtx, {
        type: 'pie',
        data: {
            labels: @Html.Raw(Json.Serialize(Model.Leads.Select(l => l.Status))),
            datasets: [{
                label: 'Dépenses par Lead',
                data: @Html.Raw(Json.Serialize(Model.Leads.Select(l => l.Expense))),
                backgroundColor: [
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 206, 86, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(255, 159, 64, 0.2)'
                ],
                borderColor: [
                    'rgba(255, 99, 132, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)'
                ],
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            plugins: {
                legend: {
                    position: 'top',
                },
                title: {
                    display: true,
                    text: 'Dépenses par Lead'
                }
            }
        }
    });

    // Graphique des Clients - Doughnut Chart
    var customerCtx = document.getElementById('customerChart').getContext('2d');
    var customerChart = new Chart(customerCtx, {
        type: 'doughnut',
        data: {
            labels: @Html.Raw(Json.Serialize(Model.Customers.Select(c => c.Name))),
            datasets: [{
                data: @Html.Raw(Json.Serialize(Model.Customers.Select(c => c.Budget))),
                backgroundColor: [
                    'rgba(255, 99, 132, 0.7)',
                    'rgba(54, 162, 235, 0.7)',
                    'rgba(255, 206, 86, 0.7)',
                    'rgba(75, 192, 192, 0.7)',
                    'rgba(153, 102, 255, 0.7)'
                ],
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            plugins: {
                title: {
                    display: true,
                    text: 'Répartition du budget par client'
                },
                legend: {
                    position: 'right'
                }
            }
        }
    });
</script>

<style>
    .clickable-card {
        cursor: pointer;
        transition: transform 0.2s, box-shadow 0.2s;
    }

    .clickable-card:hover {
        transform: scale(1.05);
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    }

    .clickable-card i {
        float: right;
        margin-top: 10px;
        color: #45484b;
    }

    .clickable-card:hover i {
        color: #333435;
    }
</style>
